<%- | Type::PortNumber[1] $marmotta_port,
      Type::PortNumber[1] $postgres_port, 
      String[1] $postgres_db, 
      String[1] $postgres_user, 
      String[1] $postgres_password, 
      String[1] $docker_base,
| -%>
# Dockerfile for Apache Marmotta

FROM <%= $docker_base %>
LABEL org.label-schema.vendor="RPID" \
  org.label-schema.url="https://github.com/apache/marmotta" \
  org.label-schema.name="Marmotta" \
  org.label-schema.version="1.0.0" \
  org.label-schema.docker.schema-version="1.0"


EXPOSE <%= $marmotta_port %>

WORKDIR /src
ADD . /src

# configuration
ENV DEBIAN_FRONTEND noninteractive
ENV DB_NAME <%= $postgres_db %>
ENV DB_USER <%= $postgres_user %>
ENV DB_PASS <%= $postgres_password %>
ENV PG_VERSION <%= $postgres_version %>
ENV WAR_PATH /src/launchers/marmotta-webapp/target/marmotta.war
ENV CONF_PATH /src/config/system-config.properties

# prepare the environment
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y \
		openjdk-8-jdk \
		maven \
        tomcat7 \
    || apt-get install -y -f

# build
RUN mvn clean install -DskipTests -DskipITs
RUN test -e $WAR_PATH || exit

# install the webapp
#RUN dpkg --debug=2000 --install target/marmotta_*_all.deb <-- we'd need to fix the postinst
RUN mkdir -p /usr/share/marmotta
RUN cp $WAR_PATH /usr/share/marmotta/
RUN chown tomcat7:tomcat7 /usr/share/marmotta/marmotta.war
RUN cp /src/launchers/marmotta-webapp/src/deb/tomcat/marmotta.xml /var/lib/tomcat7/conf/Catalina/localhost/
RUN chown tomcat7:tomcat7 /var/lib/tomcat7/conf/Catalina/localhost/marmotta.xml
RUN mkdir -p "$(dirname $CONF_PATH)"
RUN echo "security.enabled = false" > $CONF_PATH
RUN echo "database.type = postgres" >> $CONF_PATH
RUN echo "database.url = jdbc:postgresql://postgres:<%= $postgres_port %>/$DB_NAME?prepareThreshold=3" >> $CONF_PATH
RUN echo "database.user = $DB_USER" >> $CONF_PATH
RUN echo "database.password = $DB_PASS" >> $CONF_PATH
RUN chown -R tomcat7:tomcat7 "$(dirname $CONF_PATH)"

# cleanup
RUN mvn clean \
    && rm -rf ~/.m2 \
    && apt-get remove maven --purge -y \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && apt-get autoclean -y \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# entrypoint
RUN cp /src/launchers/marmotta-webapp/src/docker/entrypoint.sh /usr/local/bin/marmotta.sh
ENTRYPOINT ["/usr/local/bin/marmotta.sh"]
